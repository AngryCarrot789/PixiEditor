<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:cmd="http://www.galasoft.ch/mvvmlight"
    xmlns:behaviors="clr-namespace:PixiEditor.Helpers.Behaviours"
    xmlns:converters="clr-namespace:PixiEditor.Helpers.Converters"
    xmlns:dataholders="clr-namespace:PixiEditor.Models.DataHolders"
    xmlns:local="clr-namespace:PixiEditor.Views.UserControls"
    xmlns:sys="clr-namespace:System;assembly=System.Runtime"
    x:Class="PixiEditor.Views.UserControls.DrawingViewPort"
    mc:Ignorable="d"
    d:DesignHeight="450" d:DesignWidth="800" x:Name="uc">
    <UserControl.Resources>
        <converters:BoolToIntConverter x:Key="BoolToIntConverter" />
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters:IntToViewportRectConverter x:Key="IntToViewportRectConverter" />
        <converters:ZoomToViewportConverter x:Key="ZoomToViewportConverter" />
    </UserControl.Resources>

    <local:Zoombox x:Name="zoombox" ClipToBounds="True" d:DataContext="{d:DesignInstance dataholders:Document}"
                   UseTouchGestures="{Binding UseTouchGestures, ElementName=uc}">
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="MouseMove">
                <cmd:EventToCommand Command="{Binding MouseMoveCommand, ElementName=uc}" PassEventArgsToCommand="True" />
            </i:EventTrigger>
            <i:EventTrigger EventName="MouseDown">
                <cmd:EventToCommand Command="{Binding MouseDownCommand, ElementName=uc}" PassEventArgsToCommand="True" />
            </i:EventTrigger>
            <i:EventTrigger EventName="MouseUp">
                <cmd:EventToCommand Command="{Binding MouseUpCommand, ElementName=uc}" PassEventArgsToCommand="True" />
            </i:EventTrigger>
            <i:EventTrigger EventName="PreviewMouseDown">
                <i:InvokeCommandAction Command="{Binding PreviewMouseDownCommand, ElementName=uc}"/>
            </i:EventTrigger>
            <i:EventTrigger EventName="StylusButtonDown">
                <cmd:EventToCommand Command="{Binding StylusButtonDownCommand, ElementName=uc}"
                                        PassEventArgsToCommand="True"/>
            </i:EventTrigger>
            <i:EventTrigger EventName="StylusButtonUp">
                <cmd:EventToCommand Command="{Binding StylusButtonUpCommand, ElementName=uc}"
                                        PassEventArgsToCommand="True"/>
            </i:EventTrigger>
            <i:EventTrigger EventName="StylusSystemGesture">
                <cmd:EventToCommand Command="{Binding StylusGestureCommand, ElementName=uc}"
                                        PassEventArgsToCommand="True"/>
            </i:EventTrigger>
            <i:EventTrigger EventName="StylusOutOfRange">
                <cmd:EventToCommand Command="{Binding StylusOutOfRangeCommand, ElementName=uc}"
                                        PassEventArgsToCommand="True"/>
            </i:EventTrigger>
        </i:Interaction.Triggers>
        <i:Interaction.Behaviors>
            <behaviors:MouseBehavior RelativeTo="{Binding ElementName=zoombox, Path=AdditionalContent}"
                                     MouseX="{Binding MouseXOnCanvas, Mode=TwoWay, ElementName=uc}"
                                     MouseY="{Binding MouseYOnCanvas, Mode=TwoWay, ElementName=uc}" />
        </i:Interaction.Behaviors>

        <local:Zoombox.AdditionalContent>
            <Canvas Width="{Binding Width}" Height="{Binding Height}"
                    Loaded="OnCanvasLoaded"
                    VerticalAlignment="Center" HorizontalAlignment="Center"
                    RenderOptions.BitmapScalingMode="NearestNeighbor">
                <Canvas.Background>
                    <ImageBrush ImageSource="/Images/CheckerTile.png" TileMode="Tile" ViewportUnits="Absolute">
                        <ImageBrush.Viewport>
                            <Binding Path="Zoom" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type local:Zoombox}}" Converter="{StaticResource ZoomToViewportConverter}">
                                <Binding.ConverterParameter>
                                    <sys:Double>16</sys:Double>
                                </Binding.ConverterParameter>
                            </Binding>
                        </ImageBrush.Viewport>
                    </ImageBrush>
                </Canvas.Background>

                <local:ReferenceLayerView ReferenceLayerRenderer="{Binding ReferenceLayerRenderer}"
                                          ShowReferenceLayer="{Binding ReferenceLayer.IsVisible}"
                                          HideReferenceLayer="{Binding XamlAccesibleViewModel.BitmapManager.HideReferenceLayer}"
                                          Width="{Binding Width}" Height="{Binding Height}"
                                          RenderOptions.BitmapScalingMode="NearestNeighbor"/>

                <Image Source="{Binding PreviewLayerRenderer.FinalBitmap}" Panel.ZIndex="2"
                       RenderOptions.BitmapScalingMode="NearestNeighbor" Stretch="Uniform"
                       Width="{Binding Width}" Height="{Binding Height}"/>

                <Image VerticalAlignment="Top" HorizontalAlignment="Left" Source="{Binding Renderer.FinalBitmap}"
                       RenderOptions.BitmapScalingMode="NearestNeighbor" Stretch="Uniform" 
                       Visibility="{Binding XamlAccesibleViewModel.BitmapManager.OnlyReferenceLayer, Converter={InverseBoolToVisibilityConverter}}"/>
                
                <local:PlainLayerView TargetLayer="{Binding ActiveSelection.SelectionLayer}"
                                      VerticalAlignment="Top" HorizontalAlignment="Left"
                                      Width="{Binding ActiveSelection.SelectionLayer.Width}"
                                      Height="{Binding ActiveSelection.SelectionLayer.Height}"
                                      Margin="{Binding ActiveSelection.SelectionLayer.Offset}"
                                      Opacity="0.5"/>
                
                <Grid ShowGridLines="True" Width="{Binding Width}" Height="{Binding Height}" Panel.ZIndex="10" 
                      Visibility="{Binding GridLinesVisible, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:DrawingViewPort}}}">
                    <Rectangle Focusable="False">
                        <Rectangle.Fill>
                            <VisualBrush Viewport="{Binding Height, Converter={StaticResource IntToViewportRectConverter}}" ViewboxUnits="Absolute" TileMode="Tile" >
                                <VisualBrush.Visual>
                                    <Line  X1="0" Y1="0" X2="1" Y2="0" Stroke="Black" StrokeThickness="0.01"/>
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Rectangle Focusable="False">
                        <Rectangle.Fill>
                            <VisualBrush Viewport="{Binding Width, Converter={StaticResource IntToViewportRectConverter}, ConverterParameter=vertical}" ViewboxUnits="Absolute" TileMode="Tile" >
                                <VisualBrush.Visual>
                                    <Line  X1="0" Y1="0" X2="0" Y2="1" Stroke="Black" StrokeThickness="0.01"/>
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Rectangle Focusable="False">
                        <Rectangle.Fill>
                            <VisualBrush Viewport="{Binding Height, Converter={StaticResource IntToViewportRectConverter}}" ViewboxUnits="Absolute" TileMode="Tile" >
                                <VisualBrush.Visual>
                                    <Line  X1="0" Y1="0" X2="1" Y2="0" Stroke="White" StrokeThickness="0.02"/>
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Rectangle Focusable="False">
                        <Rectangle.Fill>
                            <VisualBrush Viewport="{Binding Width, Converter={StaticResource IntToViewportRectConverter}, ConverterParameter=vertical}" ViewboxUnits="Absolute" TileMode="Tile" >
                                <VisualBrush.Visual>
                                    <Line  X1="0" Y1="0" X2="0" Y2="1" Stroke="White" StrokeThickness="0.02"/>
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                </Grid>
            </Canvas>
        </local:Zoombox.AdditionalContent>
    </local:Zoombox>
</UserControl>
