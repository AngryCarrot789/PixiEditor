<Window x:Class="PixiEditor.Views.Dialogs.SettingsWindow"
        x:ClassModifier="internal"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PixiEditor.Views.Dialogs" 
        xmlns:sys="clr-namespace:System;assembly=System.Runtime"
        xmlns:viewmodels="clr-namespace:PixiEditor.ViewModels" 
        xmlns:converters="clr-namespace:PixiEditor.Helpers.Converters" 
        xmlns:views="clr-namespace:PixiEditor.Views" 
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
        xmlns:behaviours="clr-namespace:PixiEditor.Helpers.Behaviours" 
        xmlns:usercontrols="clr-namespace:PixiEditor.Views.UserControls"
        xmlns:dial="clr-namespace:PixiEditor.Views.Dialogs"
        xmlns:commands="clr-namespace:PixiEditor.Models.Commands"
        xmlns:cmds="clr-namespace:PixiEditor.Models.Commands.XAML"
        mc:Ignorable="d"
        Title="Settings" Name="window" 
        Height="688" Width="780"
        MinHeight="500" MinWidth="665"
        WindowStyle="None" DataContext="{DynamicResource SettingsWindowViewModel}"
        WindowStartupLocation="CenterScreen"
        BorderBrush="Black" BorderThickness="1"
        Background="{StaticResource AccentColor}">
    <Window.Resources>
        <viewmodels:SettingsWindowViewModel x:Key="SettingsWindowViewModel"/>
        <BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    </Window.Resources>

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="32"  GlassFrameThickness="0.1"
                      ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}" />
    </WindowChrome.WindowChrome>

    <Window.CommandBindings>
        <CommandBinding Command="{x:Static SystemCommands.CloseWindowCommand}" CanExecute="CommandBinding_CanExecute"
                        Executed="CommandBinding_Executed_Close" />
    </Window.CommandBindings>

    <DockPanel Background="{StaticResource MainColor}" Focusable="True">
        <i:Interaction.Behaviors>
            <behaviours:ClearFocusOnClickBehavior/>
        </i:Interaction.Behaviors>

        <dial:DialogTitleBar DockPanel.Dock="Top"
            TitleText="Settings" CloseCommand="{x:Static SystemCommands.CloseWindowCommand}"/>

        <ListBox DockPanel.Dock="Left" x:Name="pages" 
                 Background="Transparent" BorderThickness="0" Width="150" ItemContainerStyle="{StaticResource PixiListBoxItemStyle}"
                 SelectedItem="{Binding CurrentPage}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Margin="10 5 10 5" FontSize="15" Foreground="White" Text="{Binding}"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.ItemsSource>
                <x:Array Type="{x:Type sys:String}">
                    <sys:String>General</sys:String>
                    <sys:String>Discord</sys:String>
                    <sys:String>Keybinds</sys:String>
                </x:Array>
            </ListBox.ItemsSource>
        </ListBox>

        <Grid Grid.Row="1" Grid.Column="1" Background="{StaticResource AccentColor}">
            <Grid Visibility="{Binding CurrentPage, Converter={converters:EqualityBoolToVisibilityConverter},
            ConverterParameter='General'}" Margin="15,10" Tag="27">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="15"/>
                    <ColumnDefinition Width="230"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=Tag}"/>
                    <RowDefinition Height="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=Tag}"/>
                    <RowDefinition Height="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=Tag}"/>
                    <RowDefinition Height="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=Tag}"/>
                    <RowDefinition Height="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=Tag}"/>
                    <RowDefinition Height="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=Tag}"/>
                    <RowDefinition Height="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=Tag}"/>
                    <RowDefinition Height="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=Tag}"/>
                    <RowDefinition Height="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=Tag}"/>
                    <RowDefinition Height="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=Tag}"/>
                    <RowDefinition Height="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=Tag}"/>
                    <RowDefinition Height="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=Tag}"/>
                    <RowDefinition Height="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=Tag}"/>
                    <RowDefinition Height="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=Tag}"/>
                    <RowDefinition Height="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=Tag}"/>
                </Grid.RowDefinitions>

                <Label Grid.Row="0" Grid.ColumnSpan="2" Style="{StaticResource SettingsHeader}">Misc</Label>

                <CheckBox Grid.Row="1" Grid.Column="1"
                          VerticalAlignment="Center"
                          IsChecked="{Binding SettingsSubViewModel.File.ShowStartupWindow}">Show startup window</CheckBox>

                <CheckBox Grid.Row="2" Grid.Column="1"
                          VerticalAlignment="Center"
                          IsChecked="{Binding SettingsSubViewModel.General.ImagePreviewInTaskbar}">Show image preview in taskbar</CheckBox>

                <Label Grid.Row="3" Grid.Column="1" Style="{StaticResource SettingsText}"
                       ToolTip="How many documents are shown under File > Recent. Default: 8">Recent file list length</Label>
                <views:NumberInput Grid.Row="3" Grid.Column="2" 
                                   Min="0" FontSize="12" HorizontalAlignment="Left"
                                   Value="{Binding SettingsSubViewModel.File.MaxOpenedRecently, Mode=TwoWay}" Height="19" Width="40"/>

                <Label Grid.Row="4" Grid.ColumnSpan="2"  Style="{StaticResource SettingsHeader}">Default new file size</Label>

                <Label Grid.Row="5" Grid.Column="1" Style="{StaticResource SettingsText}">Width</Label>
                <views:SizeInput Grid.Row="5" Grid.Column="2" 
                                 Size="{Binding SettingsSubViewModel.File.DefaultNewFileWidth, Mode=TwoWay}" 
                                 Width="70" Height="21" MaxSize="9999" HorizontalAlignment="Left"/>

                <Label Grid.Row="6" Grid.Column="1" Style="{StaticResource SettingsText}">Height</Label>
                <views:SizeInput Grid.Row="6" Grid.Column="2" 
                                 Size="{Binding SettingsSubViewModel.File.DefaultNewFileHeight, Mode=TwoWay}" 
                                 Width="70" Height="21" MaxSize="9999" HorizontalAlignment="Left"/>

                <Label Grid.Row="7" Grid.ColumnSpan="2" Style="{StaticResource SettingsHeader}">Tools</Label>

                <CheckBox Grid.Row="8" Grid.Column="1" VerticalAlignment="Center"
                    IsChecked="{Binding SettingsSubViewModel.Tools.EnableSharedToolbar}">Enable shared toolbar</CheckBox>

                <Label Grid.Row="9" Grid.ColumnSpan="2" Style="{StaticResource SettingsHeader}">Automatic updates</Label>

                <CheckBox Grid.Row="10" Grid.Column="1" VerticalAlignment="Center"
                    IsChecked="{Binding SettingsSubViewModel.Update.CheckUpdatesOnStartup}">Check updates on startup</CheckBox>

                <Label Grid.Row="11" Grid.Column="1" Style="{StaticResource SettingsText}">Update stream</Label>
                <ComboBox Grid.Row="11" Grid.Column="2" VerticalAlignment="Center"
                    Width="110" Height="22" HorizontalAlignment="Left"
                    ItemsSource="{Binding SettingsSubViewModel.Update.UpdateChannels}"
                    SelectedValue="{Binding SettingsSubViewModel.Update.UpdateChannelName}"/>

                <Label Grid.Row="12" Grid.ColumnSpan="2" Style="{StaticResource SettingsHeader}">Debug</Label>
                <CheckBox Grid.Row="13" Grid.Column="1" VerticalAlignment="Center"
                    IsChecked="{Binding SettingsSubViewModel.General.IsDebugModeEnabled}">Enable Debug Mode</CheckBox>
                <Label Grid.Row="14" Grid.Column="1" Style="{StaticResource SettingsText}" VerticalAlignment="Center">
                    <Hyperlink Command="{cmds:Command PixiEditor.Debug.OpenCrashReportsDirectory}" Style="{StaticResource SettingsLink}">
                        <Run Text="Open Crash Reports Directory"/>
                        <Run Text="" FontFamily="{StaticResource Feather}"/>
                    </Hyperlink>
                </Label>
            </Grid>

            <StackPanel Visibility="{Binding CurrentPage, Converter={converters:EqualityBoolToVisibilityConverter},
            ConverterParameter='Discord'}" Margin="15,10">
                <Grid Tag="27">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="15"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=Tag}"/>
                        <RowDefinition Height="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=Tag}"/>
                        <RowDefinition Height="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=Tag}"/>
                        <RowDefinition Height="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=Tag}"/>
                        <RowDefinition Height="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=Tag}"/>
                    </Grid.RowDefinitions>

                    <Label Grid.Row="0" Grid.ColumnSpan="2" Style="{StaticResource SettingsHeader}">Rich Presence</Label>

                    <CheckBox Grid.Row="1" Grid.Column="1" VerticalAlignment="Center"
                    IsChecked="{Binding SettingsSubViewModel.Discord.EnableRichPresence}">Enabled</CheckBox>
                    <CheckBox Grid.Row="2" Grid.Column="1" VerticalAlignment="Center"
                    IsEnabled="{Binding SettingsSubViewModel.Discord.EnableRichPresence}" 
                    IsChecked="{Binding SettingsSubViewModel.Discord.ShowDocumentName}">Show image name</CheckBox>
                    <CheckBox Grid.Row="3" Grid.Column="1" VerticalAlignment="Center"
                    IsEnabled="{Binding SettingsSubViewModel.Discord.EnableRichPresence}" 
                    IsChecked="{Binding SettingsSubViewModel.Discord.ShowDocumentSize}">Show image size</CheckBox>
                    <CheckBox Grid.Row="4" Grid.Column="1" VerticalAlignment="Center"
                    IsEnabled="{Binding SettingsSubViewModel.Discord.EnableRichPresence}" 
                    IsChecked="{Binding SettingsSubViewModel.Discord.ShowLayerCount}">Show layer count</CheckBox>
                </Grid>
                <usercontrols:DiscordRPPreview 
                    Margin="15"
                    Width="280"
                    State="{Binding SettingsSubViewModel.Discord.StatePreview}" 
                    Detail="{Binding SettingsSubViewModel.Discord.DetailPreview}" 
                    IsPlaying="{Binding SettingsSubViewModel.Discord.EnableRichPresence}"/>
            </StackPanel>

            <Grid Visibility="{Binding CurrentPage, Converter={converters:EqualityBoolToVisibilityConverter}, ConverterParameter='Keybinds'}"
                        Margin="10,10,10,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                    <StackPanel.Resources>
                        <Style TargetType="Button" BasedOn="{StaticResource DarkRoundButton}">
                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter Property="Width" Value="115"/>
                            <Setter Property="Height" Value="Auto"/>
                            <Setter Property="Margin" Value="5,0"/>
                            <Setter Property="FontSize" Value="12"/>
                            <Setter Property="Padding" Value="5"/>
                        </Style>
                    </StackPanel.Resources>
                    <Button Command="{cmds:Command PixiEditor.Shortcuts.Export}"
                            Content="Export"/>
                    <Button Command="{cmds:Command PixiEditor.Shortcuts.Import}"
                            Content="Import"/>
                    <Button Command="{cmds:Command PixiEditor.Shortcuts.OpenTemplatePopup}"
                            Content="Import from..."/>
                    <Button Command="{cmds:Command PixiEditor.Shortcuts.Reset}"
                            Content="Reset all"/>
                </StackPanel>
                <TextBox Grid.Row="1" Style="{StaticResource DarkTextBoxStyle}" Margin="0,10"
                         Text="{Binding SearchTerm, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                <ScrollViewer Grid.Row="2" x:Name="commandScroll">
                    <ScrollViewer.Template>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                                <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Margin="0,5,0,20"/>
                                <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                            </Grid>
                        </ControlTemplate>
                    </ScrollViewer.Template>
                    <Grid>
                        <TextBlock Foreground="LightGray" HorizontalAlignment="Center" TextAlignment="Center"
                                   Visibility="{Binding VisibleGroups, ConverterParameter=0, Mode=OneWay, Converter={converters:EqualityBoolToVisibilityConverter}}"
                                   Text="Nothing found"/>
                        <ItemsControl ItemsSource="{Binding Commands}" Foreground="White">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Margin="0,0,0,20" Visibility="{Binding Visibility}">
                                        <TextBlock Text="{Binding DisplayName}" FontSize="22" FontWeight="SemiBold"/>
                                        <ItemsControl ItemsSource="{Binding Commands}">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid Margin="0,5,5,0" Visibility="{Binding Visibility}">
                                                        <TextBlock Text="{Binding Command.DisplayName}" ToolTip="{Binding Command.Description}"/>
                                                        <usercontrols:ShortcutBox Width="120" Command="{Binding Command}" HorizontalAlignment="Right"/>
                                                    </Grid>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </StackPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Grid>
                </ScrollViewer>

                <Grid Grid.Row="2" Height="10" VerticalAlignment="Top"
                      Visibility="{Binding VerticalOffset, ElementName=commandScroll, Mode=OneWay, Converter={converters:EqualityBoolToVisibilityConverter Invert=True}, ConverterParameter=0}"
                      Margin="-10,0">
                    <Grid.Background>
                        <LinearGradientBrush StartPoint="0, 0" EndPoint="0, 1">
                            <GradientStop Color="#22000000" Offset="0"/>
                            <GradientStop Color="#00000000" Offset="1.0"/>
                        </LinearGradientBrush>
                    </Grid.Background>
                </Grid>
            </Grid>
        </Grid>
    </DockPanel>
</Window>
